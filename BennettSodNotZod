//AUTHOR: Minnie Bennett
//COURSE: CPT167
//PURPOSE: Using invoked more than once in each validation method.
//STARTDATE: 19February2020

package edu.cpt167.bennett.participation6;

import java.util.Scanner;

public class SodNotZodVoidVRm2Invked 
{
	//CLASS CONSTANTS
		public static final double DISCOUNT_RATE_MEMBER = .15;
		public static final double DISCOUNT_RATE_SENIOR = .25;
		public static final double DISCOUNT_RATE_NONE = 0.0;
		public static final double PSFD_PRICE_PREMIUM = 43.78;
		public static final double PSFD_PRICE_SPECIAL = 30.00;
		public static final double PSFD_PRICE_BASIC = 24.21;
		public static final double TAX_RATE = .075;
		public static final String PSFD_NAME_PREMIUM = "30-Inch Poly Rake";
		public static final String PSFD_NAME_SPECIAL = "26-Inch Poly Rake";
		public static final String PSFD_NAME_BASIC = "24-Inch Poly Rake";
		public static final String PSFD_DISCOUNT_MEMBER = "Member Discount";
		public static final String PSFD_DISCOUNT_SENIOR = "Senior Discount";
		public static final String PSFD_DISCOUNT_NONE = "No Discount";
		public static final String MENU_SELECTION_QUIT = "Quit";
		public static final int MAX_PURCHASE_COUNT = 1; //MAX SOD SELECTION PER TRANSACTION
		public static final int RESET_VALUE = 0;
 

	public static void main(String[] args) 
	{
		//CREATING A SCANNER FOR INPUT
		Scanner input = new Scanner(System.in);
		
		//VARIABLES FOR INPUT
				String userName = ""; 
				String itemName = "";
				char itemSelection = ' ';
				char menuSelection = ' ';
				double itemPrice = 0.0;
				double discountPrice = 0.0;
				double discountAmt = 0.0;
				double discountRate = 0.0;
				double subTotal = 0.0;
				double totalCost = 0.0;
				double grandTotal = 0.0;
				double tax = 0.0;
				int howMany = 0;
				int memberCount = 0;
				int seniorCount = 0;
				int noDiscountCount = 0;
				int premiumCount = 0;
				int specialCount = 0;
				int basicCount = 0;
				int purchaseCounter = 0;
				
				
				
				//WELCOME BANNER
				displayWelcomeBanner();
				
				//INPUT SECTION
				userName = getUserName(input);
								
				//MENU SELECTION
				System.out.println("Main Menu Selection");
				System.out.println("############################################################");
				
				//MENU VALIDATED
				menuSelection = validateMainMenu(input);
				
				//WHILE LOOP 
				while (menuSelection != 'Q') 
				{
					while (purchaseCounter < MAX_PURCHASE_COUNT) 
					{
						//ITEM VALIDATED
						itemSelection = validateItemMenu(input);
						howMany = validateHowMany(input);
						
						//MENU SELECTION STRUCTURE
						if(menuSelection == 'A') 
						{
							discountRate = DISCOUNT_RATE_MEMBER;
							memberCount++;
						}
						else if(menuSelection == 'B') 
						{
							discountRate = DISCOUNT_RATE_SENIOR;
							seniorCount++;	
						}
						else 
						{
							discountRate = DISCOUNT_RATE_NONE;
							noDiscountCount++;
						}//END OF MENU SELECTION STRUCTURE
						
						//ITEM SELECTION STRUCTURE
						if(itemSelection == 'A') 
						{
							itemName = PSFD_NAME_PREMIUM;
							itemPrice = PSFD_PRICE_PREMIUM;
							premiumCount++;
						}
						else if (itemSelection == 'B') 
						{
							itemName = PSFD_NAME_SPECIAL;
							itemPrice = PSFD_PRICE_SPECIAL;
							specialCount++;		
						}
						else 
						{
							itemName = PSFD_NAME_BASIC;
							itemPrice = PSFD_PRICE_BASIC;
							basicCount++;
						}//END OF ITEM SELECTION STRUCTURE
						
					//CALCULATION AND COUNTERS
					discountAmt = itemPrice * discountRate;
					discountPrice = itemPrice - discountAmt;
					subTotal = howMany * discountPrice;
					tax = subTotal * TAX_RATE;
					totalCost = subTotal + tax;
					grandTotal = grandTotal + totalCost;
					
					//DISPLAY ITEM RECEIPT
					displayItemReceipt(itemName,itemPrice,discountPrice,howMany,subTotal,tax, totalCost);
					
					//PROCESS PURCHASE COUNTER
					purchaseCounter++;
					
					}//END OF WHILE COUNTER LOOP
				//RESET COUNTER
				purchaseCounter = RESET_VALUE;
				
				//MENU VALIDATED
				menuSelection = validateMainMenu(input);
								
				}//END OF WHILE LOOP
				
		//GRAND TOTAL
			if(grandTotal > 0.0) 
			{
			displayFinalReport(userName,memberCount,seniorCount,noDiscountCount,premiumCount,specialCount,basicCount,grandTotal);	
			}//END OF GRAND TOTAL
				
			//DISPLAY FAREWELL MESSAGE
			displayFarewellMessage();
		
		// TODO Auto-generated method stub
		//CLOSING SCANNER
		input.close();
				
		
	}//END OF MAIN

	//WELCOME BANNER
	public static void displayWelcomeBanner() 
	{
		System.out.println("###########################################################");
		System.out.println("Welcome to SodNotZod Discount Sales");
		System.out.println("############################################################");
	}//END OF WELCOME BANNER
	
	//GETTING USER NAME
	public static String getUserName(Scanner borrowedinput) 
	{
		String localUserName = "";
		System.out.println("############################################################\n");
		System.out.printf("Hello, to get started, please tell me your first name?");
		System.out.println("");
		System.out.println("############################################################\n");
		localUserName = borrowedinput.nextLine(); 
		return localUserName;
				
	}//END OF GETTING USER NAME
	
	public static char validateMainMenu (Scanner borrowedInput) 
	{
		char localSelection;
		//DISPLAYING MAIN MENU SELECTION
		System.out.println("############################################################");
		System.out.println("Main Menu Selection");
		System.out.printf("%-4s%-30s\n", "[A]", "Discount Member");
		System.out.printf("%-4s%-30s\n", "[B]", "Discount Senior");
		System.out.printf("%-4s%-30s\n", "[C]", "None");
		System.out.printf("%-4s%-8s\n", "[Q}", MENU_SELECTION_QUIT);
		System.out.println("############################################################");
		System.out.println("Please enter your selection,");
		System.out.println("############################################################");
		localSelection = borrowedInput.next().toUpperCase().charAt(0);
		while (localSelection != 'A' && localSelection != 'B' && localSelection != 'C' && localSelection != 'Q') 
		{
			//VALIDATION ERROR
			System.out.println("Selection Is Invalid");
			System.out.println("");
			System.out.println("############################################################");
			System.out.println("Main Menu Selection");
			System.out.printf("%-4s%-30s\n", "[A]", "Discount Member");
			System.out.printf("%-4s%-30s\n", "[B]", "Discount Senior");
			System.out.printf("%-4s%-30s\n", "[C]", "None");
			System.out.printf("%-4s%-8s\n", "[Q}", MENU_SELECTION_QUIT);
			System.out.println("############################################################");
			System.out.println("Please enter your selection:");
			System.out.println("############################################################");
			localSelection = borrowedInput.next().toUpperCase().charAt(0);
		}
		return localSelection;
	}//END OF MENU SELECTION VR METHOD
	
	//VALIDATE ITEM SELECTION MENU
	public static char validateItemMenu(Scanner borrowedInput) 
	{
		
		char localItemSelection = ' ';
		//Item Selection
		System.out.println("############################################################");
		System.out.print("Item Selection");
		System.out.println("");
		System.out.printf("%-4s%-30s\n", "[A]", "30-Inch Poly Rake");
		System.out.printf("%-4s%-30s\n", "[B]", "26-Inch Poly Rake");
		System.out.printf("%-4s%-30s\n", "[C]", "24-Inch Poly Rake");
		System.out.println("############################################################");
		System.out.println("Please enter your selection:");
		System.out.println("############################################################");
		localItemSelection = borrowedInput.next().toUpperCase().charAt(0);
		System.out.println("");
		
		//WHILE ITEM
		while(localItemSelection != 'A' && localItemSelection != 'B' && localItemSelection != 'C') 
		{
			System.out.println("Selection Is Invalid");
			System.out.print("Item Selection");
			System.out.println("");
			System.out.printf("%-4s%-30s\n", "[A]", "30-Inch Poly Rake");
			System.out.printf("%-4s%-30s\n", "[B]", "26-Inch Poly Rake");
			System.out.printf("%-4s%-30s\n", "[C]", "24-Inch Poly Rake");
			System.out.println("############################################################");
			System.out.println("Please enter your selection:");
			System.out.println("############################################################");
			localItemSelection = borrowedInput.next().toUpperCase().charAt(0);
		}//END OF ITEM SELECTION
		return localItemSelection;
	}//END VALIDATION OF IITEM SELECTION
	
	
	//VALIDATE HOW MANY
	public static int validateHowMany(Scanner borrowedInput) 
	{
		int localHowMany = 0;
		System.out.println("############################################################");
		System.out.println("Please enter the number items you would like to purchase:");
		localHowMany = borrowedInput.nextInt();
		while (localHowMany <= 0) 
		{
			//Error
			System.out.println("############################################################");
			System.out.println("The selection is invalid, please try again:");
			System.out.println("############################################################");
			localHowMany = borrowedInput.nextInt();
		}//END WHILE HOW MANY
		return localHowMany;
	}//END OF HOW MANY VALIDATION
	
	//ITEM RECEIPT
		public static void displayItemReceipt(String borrowedItemName, double borrowedItemPrice,double borrowedDiscountPrice,int borrowedHowMany,
				double borrowedSubTotal, double borrowedTax, double borrowedTotalCost) 
			{
				System.out.println("############################################################");
				System.out.println("Here is your receipt");
				System.out.println("############################################################");
				System.out.printf("%-40s%15s\n", "Item Name:",  borrowedItemName);
				System.out.printf("%-40s%3s%8.2f\n", "Item Price:",  "$ ", borrowedItemPrice);
				System.out.printf("%-45s%3s\n", "Quantity:", borrowedHowMany);
				System.out.printf("%-40s%3s%8.2f\n", "Discount Price:", "$ ", borrowedDiscountPrice);
				System.out.printf("%-40s%3s%8.2f\n", "Subtotal:",  "$ ", borrowedSubTotal);
				System.out.printf("%-40s%3s%8.2f\n", "Tax:",  "$ ", borrowedTax);
				System.out.printf("%-40s%3s%8.2f\n", "Total Cost:",  "$ ", borrowedTotalCost);
				System.out.println("############################################################");
				
			}//END OF ITEM RECEIPT
			
		//FINAL REPORT
			public static void displayFinalReport(String borrowedUserName, int borrowedMemberCount, int borrowedSeniorCount, 
					int borrowedNoDiscountCount,int premiumCount,int specialCount,int basicCount,double borrowedGrandTotal) 
			{
				
				System.out.println("############################################################");
				System.out.printf("%-3s%10s\n",borrowedUserName, ", here is the final report");
				System.out.println("############################################################");
				System.out.printf("%-40s%3s\n","Member Count:", borrowedMemberCount);
				System.out.printf("%-40s%3s\n","Senior Count:", borrowedSeniorCount);
				System.out.printf("%-40s%3s\n","No Discount Count:", borrowedNoDiscountCount);
				System.out.printf("%-40s%3s\n","Premium Count:", premiumCount);
				System.out.printf("%-40s%3s\n","Special Count:", specialCount);
				System.out.printf("%-40s%3s\n", "Basic Count:",  basicCount);
				System.out.printf("%-30s%9s%8.2f\n", "Grand Total:",  "$ ", borrowedGrandTotal);
				System.out.println("############################################################");
				
			}//END OF FINAL REPORT
			
		//FAREWELL MESSAGE
			public static void displayFarewellMessage() 
					{
						System.out.println("############################################################");
						System.out.println("We Appreciate Your Business.  Please Come Again!!!");
						System.out.println("############################################################");
					}//END OF WELCOME BANNER	
	
	
}//END OF CLASS
